
		–ó–ê–î–ê–ù–ò–ï:
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_one_away(word1, word2), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–≤–∞ —Å–ª–æ–≤–∞ word1 –∏ word2 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True
–µ—Å–ª–∏ —Å–ª–æ–≤–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é –¥–ª–∏–Ω—É –∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è —Ä–æ–≤–Ω–æ –≤ 1 —Å–∏–º–≤–æ–ª–µ –∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.


		–†–ï–®–ï–ù–ò–ï:

def is_one_away(x, y):
   total = 0
   if len(x) == len(y):
      for i in range(len(x)):
        if x[i] != y[i]:
         total += 1 
         
      print(True if total == 1  else False)
   else:
         print(False)
is_one_away(input(), input())
		
		–ó–ê–î–ê–ù–ò–ï:
		–ü–∞–ª–∏–Ω–¥—Ä–æ–º üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_palindrome(text), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å—Ç—Ä–æ–∫—É text –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ True –µ—Å–ª–∏ 
—É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º –∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü–∞–ª–∏–Ω–¥—Ä–æ–º ‚Äì —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ –≤ –æ–±–æ–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—á–∏—Ç–∞–π—Ç–µ –±–æ–ª—å—à–∏–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –±—É–∫–≤—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏, –∞ —Ç–∞–∫–∂–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –ø—Ä–æ–±–µ–ª—ã, –∞ —Ç–∞–∫–∂–µ —Å–∏–º–≤–æ–ª—ã , . ! ? -.




		–†–ï–®–ï–ù–ò–ï:
def is_palindrome(x):
   x = x.replace('.','').replace(' ','').replace(',','').replace('!','').replace('?','').replace('-','').upper()
   if x[::] == x[::-1]:
      return True
   else:
      return False
print(is_palindrome(input()))


		–ó–ê–î–ê–ù–ò–ï:
–£—Å–ª–æ–≤–∏—è –∑–∞–¥–∞—á–∏.
–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –ø–æ—Å—Ç—Ä–æ–∏–ª–∞ –Ω–µ–±–æ—Å–∫—Ä–µ–±, –≤ –∫–æ—Ç–æ—Ä–æ–º N —ç—Ç–∞–∂–µ–π, –∏ —Ö–æ—á–µ—Ç –ø–æ—Å—á–∏—Ç–∞—Ç—å, –∫–∞–∫—É—é –≤—ã—Ä—É—á–∫—É –æ–Ω–∞ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å
 –æ—Ç –ø—Ä–æ–¥–∞–∂–∏ –≤—Å–µ—Ö –∫–≤–∞—Ä—Ç–∏—Ä.

–ù–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞.
–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–∂–µ –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è.
–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤–æ–∑—Ä–∞—Å—Ç–∞–µ—Ç –Ω–∞ 1000 –¥–æ–ª–ª–∞—Ä–æ–≤ –∫–∞–∂–¥—ã–µ M —ç—Ç–∞–∂–µ–π. 
–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–∂–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç X –¥–æ–ª–ª–∞—Ä–æ–≤.

–ù–∞–ø—Ä–∏–º–µ—Ä: –≤ –¥–æ–º–µ 30 —ç—Ç–∞–∂–µ–π; —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–æ–∑—Ä–∞—Å—Ç–∞–µ—Ç –∫–∞–∂–¥—ã–µ 10 —ç—Ç–∞–∂–µ–π; —Ü–µ–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–∂–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 10000$. 
–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –Ω–∞ —ç—Ç–∞–∂–∞—Ö —Å 1-–≥–æ –ø–æ 10-–π –±—É–¥—É—Ç —Å—Ç–æ–∏—Ç—å –ø–æ 10000$, –Ω–∞ —ç—Ç–∞–∂–∞—Ö —Å 11-–≥–æ –ø–æ 20-–π ‚Äî –ø–æ 11000$, 
–∞ —Å 21-–≥–æ –ø–æ 30-–π ‚Äî –ø–æ 12000$.

–í–∞–º –¥–∞–Ω—ã —Ü–µ–ª—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ N, M, X.



		–†–ï–®–ï–ù–ò–ï:
def multi_money(n,m,x):
   total = 0
   price = 0
   for i in range(1, n + 1):
      price += x
      total += 1
      if total  ==  m:
         x = x + 1000
         total = 0
   print(price)

multi_money(int(input()), int(input()), int(input()))



		–ó–ê–î–ê–ù–ò–ï:






		–†–ï–®–ï–ù–ò–ï:








		–ó–ê–î–ê–ù–ò–ï:




		–†–ï–®–ï–ù–ò–ï:




		–ó–ê–î–ê–ù–ò–ï:





		–†–ï–®–ï–ù–ò–ï:


		–ó–ê–î–ê–ù–ò–ï:


		–†–ï–®–ï–ù–ò–ï:




		–ó–ê–î–ê–ù–ò–ï:


		–†–ï–®–ï–ù–ò–ï:



		–ó–ê–î–ê–ù–ò–ï:


		–†–ï–®–ï–ù–ò–ï:
