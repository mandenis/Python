
		ЗАДАНИЕ:
На вход программе подается натуральное число nn и nn строк, а затем число kk. Напишите программу, 
которая выводит kk-ую букву из введенных строк на одной строке без пробелов.
Формат входных данных
На вход программе подается натуральное число nn,  далее nn строк, каждая на отдельной строке. 
В конце вводится натуральное число kk – номер буквы (нумерация начинается с единицы).
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.

Примечание. Если некоторые строки слишком короткие, и в них нет символа с заданным номером, 
то такие строки при выводе нужно игнорировать.




		РЕШЕНИЕ:

n = [input() for i in range(int(input()))]
text = []
k = int(input())
for j in n:
    if len(j) >= k:
        text.append(j[k - 1])
print(''.join(text), end = '')
            

		ЗАДАНИЕ:
Дополните приведенный код, так чтобы он вывел сумму квадратов элементов списка numbers.


		РЕШЕНИЕ:
numbers = [1, 78, 23, -65, 99, 9089, 34, -32, 0, -67, 1, 11, 111]
total = 0
sp = []
for i in numbers:
    total += i ** 2
sp.append(total)
print(sum(sp))




		ЗАДАНИЕ:
На вход программе подается натуральное число nn, а затем nn целых чисел. Напишите программу,
 которая для каждого введенного числа xx выводит значение функции f(x) = x^2 + 2x + 1f(x)=x 
2
 +2x+1, каждое на отдельной строке.

Формат входных данных
На вход программе подаются натуральное число nn, а затем nn целых чисел, каждое на отдельной строке.

Формат выходных данных
Программа должна вывести сначала введенные числа, затем пустую строку, а затем соответствующие значения функции.

Примечание. Для первого теста имеем:
f(1) = 1^2 + 2\cdot 1 + 1 = 4, \, f(2) = 2^2 + 2\cdot 2 + 1 = 9, \, f(3) = 3^2 + 2 \cdot 3 + 1 = 16, \ldots
f(1)=1 
2
 +2⋅1+1=4,f(2)=2 
2
 +2⋅2+1=9,f(3)=3 
2
 +2⋅3+1=16,…


		РЕШЕНИЕ:

def formula (x):
    return x ** 2 + 2 * x + 1
n = [int(input()) for i in range(int(input()))]
print(*n, sep = '\n', end = '\n')
print()
for i in n:
    print(formula(i))






		ЗАДАНИЕ:





		РЕШЕНИЕ:







		ЗАДАНИЕ:




		РЕШЕНИЕ:






		ЗАДАНИЕ:




		РЕШЕНИЕ:



		ЗАДАНИЕ:



		РЕШЕНИЕ:



		ЗАДАНИЕ:


		РЕШЕНИЕ:



		ЗАДАНИЕ:

		РЕШЕНИЕ:


ЗАДАНИЕ:
РЕШЕНИЕ: