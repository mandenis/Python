
		ЗАДАНИЕ:



		РЕШЕНИЕ:
sp = input().split(' ')
total = 0
for c in sp:
    if 'a' == c.lower() or 'an' == c.lower() or 'the' == c.lower():
        total += 1
print('Общее количество артиклей:', total)



		ЗАДАНИЕ:
Немалоизвестный в пустошах Мохаве Курьер забрел в Хидден-Вэли – секретный бункер Братства Стали, 
и любезно соглашается помочь им в решении их проблем. Одной из такой проблем являлся странный компьютерный вирус, 
который проявлялся в виде появления комментариев к программам на терминалах Братства Стали. Известно, что программисты 
Братства никогда не оставляют комментарии к коду, и пишут программы на Python, поэтому удаление всех этих комментариев н
икак не навредит им. Помогите писцу Ибсену удалить все комментарии из программы.
Формат входных данных
На первой строке вводится символ решётки и сразу же натуральное число 
�
n — количество строк в программе, не считая первой. Далее следует 
�
n строк кода.
Формат выходных данных
Нужно вывести те же строки, но удалить комментарии и символы пустого пространства в конце строк. Пустую строку вместо первой
 строки ввода выводить не надо.



		РЕШЕНИЕ:
sp = input().split('#') 
for i in range(int(sp[1])):
    multi_str = input()
    if '#' not in multi_str:
        print(multi_str)
    else:
        multi_str = multi_str.split('#')
        multi_str = multi_str[0]
        print(multi_str.rstrip())







		ЗАДАНИЕ:
На вход программе подается строка текста, содержащая целые числа. Из данной строки формируется список чисел. Напишите 
Формат входных данных
На вход программе подается строка текста, содержащая целые числа, разделенные символом пробела.
Формат выходных данных
Программа должна вывести две строки текста в соответствии с условием задачи.



		РЕШЕНИЕ:
sp = [int(i) for i in input().split(' ')]
print(*(sorted(sp)))
print(*(sorted(sp, key = int, reverse=True )))







		ЗАДАНИЕ:
Дополните приведенный код, используя списочное выражение так, чтобы получить новый список, 
содержащий строки исходного списка с удаленным первым символом.





		РЕШЕНИЕ:
keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue',
'def', 'del', 'elif', 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import',
'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']

new_keywords = [c[1:] for c in keywords]
print(new_keywords)







		ЗАДАНИЕ:
Дополните приведенный код, используя списочное выражение, так чтобы получить новый список, содержащий длины строк исходного списка.




		РЕШЕНИЕ:
keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 
'def', 'del', 'elif', 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 
'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']

lengths = [len(_) for _ in keywords]

print(lengths)





		ЗАДАНИЕ:
Дополните приведенный код списочным выражением, чтобы получить новый список, содержащий только слова длиной
не менее пяти символов (включительно).




		РЕШЕНИЕ:
keywords = ['False', 'True', 'None', 'and', 'with', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 
'elif', 'else', 'except', 'finally', 'try', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal',
 'not', 'or', 'pass', 'raise', 'return', 'while', 'yield']

lengths = [c for c in keywords if len(c) >= 5]

print(lengths)



		ЗАДАНИЕ:
Дополните приведенный код, используя списочное выражение, так чтобы получить список всех чисел палиндромов от 
100
100 до 
1000
1000.



		РЕШЕНИЕ:
palindromes = [i for i in range(100,1001) if str(i) == str(i)[::-1]]
print(palindromes)



		ЗАДАНИЕ:
На вход программе подается натуральное число 
�
n. Напишите программу, использующую списочное выражение, которая создает список содержащий квадраты чисел от 
1
1 до 
�
n, а затем выводит его элементы построчно, то есть каждый на отдельной строке.

Формат входных данных
На вход программе подается натуральное число.

Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.

Примечание. Для вывода элементов списка используйте цикл for.


		РЕШЕНИЕ:
[print(i * i) for i in range(1, int(input()) + 1)]



		ЗАДАНИЕ:
На вход программе подается строка текста, содержащая целые числа. Напишите программу, использующую списочное выражение, 
которая выведет кубы указанных чисел также на одной строке.

Формат входных данных
На вход программе подается строка текста, содержащая целые числа, разделенные символом пробела.

Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.

Примечание 1. Для вывода элементов списка используйте цикл for.

Примечание 2. Используйте метод split().

		РЕШЕНИЕ:
[print(*[int(i) ** 3 for i in input().split(' ')], sep = ' ')]


		ЗАДАНИЕ:
На вход программе подается строка текста. Напишите программу, использующую списочное выражение, 
которая выводит все цифровые символы данной строки.

Формат входных данных
На вход программе подается строка текста.

Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.

Примечание. Программу можно написать в одну строку кода.

		РЕШЕНИЕ:
[print(*[int(i) for i in input() if i.isdigit() == True], sep= '')]