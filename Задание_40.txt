
		ЗАДАНИЕ:
На вход программе подается натуральное число nn, затем nn строк, затем число kk — количество поисковых запросов,
 затем kk строк — поисковые запросы. Напишите программу, которая выводит все введенные строки, в которых встречаются
 все поисковые запросы.

Формат входных данных
На вход программе подаются натуральное число nn — количество строк, затем сами строки в указанном количестве, затем число
 kk, затем сами поисковые запросы.

Формат выходных данных
Программа должна вывести все введенные строки, в которых встречаются все поисковые запросы.

Примечание. Поиск не должен быть чувствителен к регистру символов.



		РЕШЕНИЕ:
multi_text = [input() for i in range(int(input()))]
sp = [input() for i in range(int(input()))]
total = 0
for c in multi_text:
    for j in sp:
        if c.lower().find(j.lower()) == -1:
            continue
        else:
            total += 1
            if total == len(sp):
                print(c)
    total = 0
            

Второй вариант 

multi_text = [input() for i in range(int(input()))]
sp = [input() for i in range(int(input()))]
total = 0
for c in multi_text:
    for j in sp:
        if j.lower() not in c.lower():
            continue
        else:
            total += 1
            if total == len(sp):
                print(c)
    total = 0

		ЗАДАНИЕ:
На вход программе подается натуральное число nn, а затем nn целых чисел. 
Напишите программу, которая сначала выводит все отрицательные числа, затем нули,
а затем все положительные числа, каждое на отдельной строке. Числа должны быть выведены в том же порядке, в котором они были введены.
Формат входных данных
На вход программе подаются натуральное число nn, а затем nn целых чисел, каждое на отдельной строке.
Формат выходных данных
Программа должна вывести текст в соответствии с условием задачи.




		РЕШЕНИЕ:
test = []
test_nega = []
test_zero = []
for i in range(1, int(input()) +1):
    j = int(input())
    if j + 1 == 1:
        test_zero.append(j)
    elif j + 1 <= 0:
        test_nega.append(j)
    else:
        test.append(j)
print(*test_nega, *test_zero, *test, sep = '\n')





		ЗАДАНИЕ:


		РЕШЕНИЕ:








		ЗАДАНИЕ:





		РЕШЕНИЕ:







		ЗАДАНИЕ:




		РЕШЕНИЕ:






		ЗАДАНИЕ:




		РЕШЕНИЕ:



		ЗАДАНИЕ:



		РЕШЕНИЕ:



		ЗАДАНИЕ:


		РЕШЕНИЕ:



		ЗАДАНИЕ:

		РЕШЕНИЕ:


ЗАДАНИЕ:
РЕШЕНИЕ: